<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZJX</title>
  
  <subtitle>Zhao Jiaxing</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhaojiaxing.top/"/>
  <updated>2018-08-29T01:15:52.788Z</updated>
  <id>http://www.zhaojiaxing.top/</id>
  
  <author>
    <name>ZJX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>位、字节、字和字长</title>
    <link href="http://www.zhaojiaxing.top/2018/08/29/%E4%BD%8D%E3%80%81%E5%AD%97%E8%8A%82%E3%80%81%E5%AD%97%E5%92%8C%E5%AD%97%E9%95%BF/"/>
    <id>http://www.zhaojiaxing.top/2018/08/29/位、字节、字和字长/</id>
    <published>2018-08-29T01:06:16.000Z</published>
    <updated>2018-08-29T01:15:52.788Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;位&quot;&gt;&lt;a href=&quot;#位&quot; class=&quot;headerlink&quot; title=&quot;位&quot;&gt;&lt;/a&gt;位&lt;/h3&gt;&lt;p&gt;二进制数系统中，位简记为 b,也称为比特，每个二进制数字 0 或 1 就是一个位(bit)。位是数据存储的最小单位，其中 8 bit 就称为一个字节（Byte）。计算机中的 CPU 位数指的是 CPU 一次能处理的最大位数。例如 32 位计算机的 CPU 一个机器周期内可以处理 32 位二进制数据&lt;/p&gt;
&lt;h3 id=&quot;字节&quot;&gt;&lt;a href=&quot;#字节&quot; class=&quot;headerlink&quot; title=&quot;字节&quot;&gt;&lt;/a&gt;字节&lt;/h3&gt;&lt;p&gt;字节是计算机中数据处理的基本单位。计算机中以字节为单位存储和解释信息，规定一个字节由八个二进制位构成，即 1 个字节等于 8 个比特（1Byte=8bit），比字小，是构成字的单位&lt;/p&gt;
&lt;h3 id=&quot;字&quot;&gt;&lt;a href=&quot;#字&quot; class=&quot;headerlink&quot; title=&quot;字&quot;&gt;&lt;/a&gt;字&lt;/h3&gt;&lt;p&gt;计算机进行数据处理时，一次存取、加工和传送的数据长度称为字（word）。一个字通常由一个或多个（一般是字节的整数位）字节构成 &lt;/p&gt;
&lt;p&gt;在计算机的运算器、控制器中，通常都是以字为单位进行传送的。字出现在不同的地址其含义是不相同。例如，送往控制器去的字是指令，而送往运算器去的字就是一个数&lt;/p&gt;
&lt;h3 id=&quot;字长&quot;&gt;&lt;a href=&quot;#字长&quot; class=&quot;headerlink&quot; title=&quot;字长&quot;&gt;&lt;/a&gt;字长&lt;/h3&gt;&lt;p&gt;计算机的每个字所包含的位数称为字长。根据计算机的不同，字长有固定的和可变的两种。固定字长，即字长度不论什么情况都是固定不变的；可变字长，则在一定范围内，其长度是可变的。&lt;/p&gt;
&lt;p&gt;计算的字长是指它一次可处理的二进制数字的数目。计算机处理数据的速率，自然和它一次能加工的位数以及进行运算的快慢有关。如果一台计算机的字长是另一台计算机的两倍，即使两台计算机的速度相同，在相同的时间内，前者能做的工作是后者的两倍。&lt;/p&gt;
&lt;p&gt;字长是衡量计算机性能的一个重要因素。&lt;/p&gt;
    
    </summary>
    
      <category term="基础" scheme="http://www.zhaojiaxing.top/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="基础" scheme="http://www.zhaojiaxing.top/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-B-Tree和B+Tree</title>
    <link href="http://www.zhaojiaxing.top/2018/08/27/MySQL-B-Tree%E5%92%8CB-Tree/"/>
    <id>http://www.zhaojiaxing.top/2018/08/27/MySQL-B-Tree和B-Tree/</id>
    <published>2018-08-27T01:38:33.000Z</published>
    <updated>2018-08-27T02:10:02.246Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;B-Tree&quot;&gt;&lt;a href=&quot;#B-Tree&quot; class=&quot;headerlink&quot; title=&quot;B Tree&quot;&gt;&lt;/a&gt;B Tree&lt;/h3&gt;&lt;p&gt;B-Tree是为磁盘等外存储设备设计的一种平衡查找树。因此在讲B-Tree之前先了解下磁盘的相关知识。&lt;/p&gt;
&lt;p&gt;系统从磁盘读取数据到内存时是以磁盘块（block）为基本单位的，位于同一个磁盘块中的数据会被一次性读取出来，而不是需要什么取什么。&lt;/p&gt;
&lt;p&gt;InnoDB存储引擎中有页（Page）的概念，页是其磁盘管理的最小单位。InnoDB存储引擎中默认每个页的大小为16KB，可通过参数innodb_page_size将页的大小设置为4K、8K、16K，在MySQL中可通过如下命令查看页的大小：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;show variables like &amp;apos;innodb_page_size&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而系统一个磁盘块的存储空间往往没有这么大，因此InnoDB每次申请磁盘空间时都会是若干地址连续磁盘块来达到页的大小16KB。InnoDB在把磁盘数据读入到磁盘时会以页为基本单位，在查询数据时如果一个页中的每条数据都能有助于定位数据记录的位置，这将会减少磁盘I/O次数，提高查询效率&lt;/p&gt;
&lt;p&gt;B-Tree结构的数据可以让系统高效的找到数据所在的磁盘块。为了描述B-Tree，首先定义一条记录为一个二元组[key, data] ，key为记录的键值，对应表中的主键值，data为一行记录中除主键外的数据。对于不同的记录，key值互不相同&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://www.zhaojiaxing.top/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.zhaojiaxing.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>为什么说PHP不支持Unicode编码</title>
    <link href="http://www.zhaojiaxing.top/2018/08/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4PHP%E4%B8%8D%E6%94%AF%E6%8C%81Unicode%E7%BC%96%E7%A0%81/"/>
    <id>http://www.zhaojiaxing.top/2018/08/06/为什么说PHP不支持Unicode编码/</id>
    <published>2018-08-06T03:08:58.000Z</published>
    <updated>2018-08-06T03:15:59.861Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;经常看到有说法：PHP不支持Unicode，或者说PHP在底层不支持Unicode。虽然我知道PHP编码很蛋疼，各种字符串处理函数非常不规范，但也还能显示中文，一直没弄明白这个不支持Unicode是什么意思。花了一些时间来梳理这方面的信息。&lt;/p&gt;
&lt;p&gt;先从一个例子来引入：&lt;br&gt;一个PHP脚本如下，假设文件的编码是UTF-8:&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//文件编码UTF-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; strlen(&lt;span class=&quot;string&quot;&gt;&quot;中文&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; substr(&lt;span class=&quot;string&quot;&gt;&quot;中文&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 乱码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; substr(&lt;span class=&quot;string&quot;&gt;&quot;中文&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很奇怪吧，从上面看，似乎把一个汉字当成了3个字符。这就要从PHP对于字符串的存储上说起了。&lt;/p&gt;
&lt;p&gt;我总结了一下，如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP 的字符串，是由字节( byte )组成的数组构成的。也就是说，类似于 C 语言 &lt;code&gt;char a[3] = &amp;quot;abc&amp;quot;&lt;/code&gt; 这样，一个字符占据一个字节。&lt;/li&gt;
&lt;li&gt;除此之外，并没有存储文本的编码信息，也就是说 PHP 并不知道这些字符串的二进制数据，应该对应怎样的编码。&lt;/li&gt;
&lt;li&gt;再进一步，PHP 会按照脚本文件的编码，来决定字符串的编码。就比如：&lt;code&gt;$string = &amp;quot;中文&amp;quot;&lt;/code&gt;;，如果脚本文件是 UTF-8，就会把中文的 UTF-8 的编码：&lt;code&gt;E4B8ADE69687&lt;/code&gt;给保存起来。&lt;/li&gt;
&lt;li&gt;再进一步，如前说所，PHP 并不保存字符串的编码信息。所以即便中文保存为:&lt;code&gt;E4B8ADE69687&lt;/code&gt;,在字符串原生函数看来，都只是一串二进制数。所以，PHP 原生字符串函数只能操作单字节字符！就是把一个字节当做一个字符来处理！&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.zhaojiaxing.top/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.zhaojiaxing.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>说说http/webserver/fastcgi/php-fpm</title>
    <link href="http://www.zhaojiaxing.top/2018/07/20/%E8%AF%B4%E8%AF%B4http-webserver-fastcgi-php-fpm/"/>
    <id>http://www.zhaojiaxing.top/2018/07/20/说说http-webserver-fastcgi-php-fpm/</id>
    <published>2018-07-20T05:57:47.000Z</published>
    <updated>2018-07-20T07:27:18.423Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Http请求：&quot;&gt;&lt;a href=&quot;#Http请求：&quot; class=&quot;headerlink&quot; title=&quot;Http请求：&quot;&gt;&lt;/a&gt;Http请求：&lt;/h3&gt;&lt;p&gt;当用户打开浏览器并输入一串&lt;code&gt;url&lt;/code&gt;地址时，到最终页面内容呈现在用户眼前时，这之间的步骤可大致整理如下：&lt;/p&gt;
&lt;p&gt;1）用户输入&lt;code&gt;http://www.lxlxw.me&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;2）浏览器解析出主机名。&lt;/p&gt;
&lt;p&gt;3）浏览器查询这个主机名的&lt;code&gt;ip地址&lt;/code&gt;如&lt;code&gt;192.168.0.1&lt;/code&gt;（即&lt;code&gt;dns解析&lt;/code&gt;）并获得端口号如&lt;code&gt;80&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4）浏览器发起到&lt;code&gt;192.168.0.1:80&lt;/code&gt;的连接。（&lt;code&gt;tcp连接&lt;/code&gt;首次握手）&lt;/p&gt;
&lt;p&gt;5）浏览器向服务器发送一条&lt;code&gt;http get&lt;/code&gt;或&lt;code&gt;post&lt;/code&gt;报文。（有可能会先发送给&lt;code&gt;proxy&lt;/code&gt;或&lt;code&gt;gateway&lt;/code&gt;，再由它们转发给服务器，如&lt;code&gt;nginx&lt;/code&gt;做反向代理以实现负载均衡）&lt;/p&gt;
&lt;p&gt;6）浏览器从服务器读取&lt;code&gt;http响应报文&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;7）浏览器关闭连接。&lt;/p&gt;
&lt;p&gt;以上便是一条&lt;code&gt;http请求&lt;/code&gt;的大致过程，理论上所有的&lt;code&gt;http通信&lt;/code&gt;都是由&lt;code&gt;tcp/ip&lt;/code&gt;承载的，即&lt;code&gt;http&lt;/code&gt;使用&lt;code&gt;tcp连接&lt;/code&gt;，其保证了在资源传输过程中是可靠的／不会丢失或损坏的。&lt;/p&gt;
&lt;p&gt;注：&lt;code&gt;http&lt;/code&gt;和&lt;code&gt;https&lt;/code&gt;比较，&lt;code&gt;https&lt;/code&gt;就是在&lt;code&gt;http层&lt;/code&gt;和&lt;code&gt;tcp层&lt;/code&gt;之间接入了一个密码加密层，称之为&lt;code&gt;TLS&lt;/code&gt;或&lt;code&gt;SSL&lt;/code&gt;,常用于一些支付等安全性要求较高的网站。&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.zhaojiaxing.top/categories/PHP/"/>
    
      <category term="HTTP" scheme="http://www.zhaojiaxing.top/categories/PHP/HTTP/"/>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/PHP/HTTP/Nginx/"/>
    
    
      <category term="CGI" scheme="http://www.zhaojiaxing.top/tags/CGI/"/>
    
      <category term="FastCGI" scheme="http://www.zhaojiaxing.top/tags/FastCGI/"/>
    
      <category term="FPM" scheme="http://www.zhaojiaxing.top/tags/FPM/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-基本优化</title>
    <link href="http://www.zhaojiaxing.top/2018/06/21/Nginx-%E5%9F%BA%E6%9C%AC%E4%BC%98%E5%8C%96/"/>
    <id>http://www.zhaojiaxing.top/2018/06/21/Nginx-基本优化/</id>
    <published>2018-06-21T00:51:33.000Z</published>
    <updated>2018-06-22T00:35:22.817Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;高层的配置&quot;&gt;&lt;a href=&quot;#高层的配置&quot; class=&quot;headerlink&quot; title=&quot;高层的配置&quot;&gt;&lt;/a&gt;高层的配置&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user www-data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pid /var/run/nginx.pid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;worker_processes auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;worker_rlimit_nofile 10000;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;user 和 pid 推荐默认配置  &lt;/p&gt;
&lt;p&gt;worker_processes 定义了 nginx 对外提供 web 服务时的 worker 进程数。最优值取决于许多因素，包括（但不限于） CPU 核心数、存储数据的硬盘数量及负载模式。不能确定的时候，可以将其设置为可用的 CPU 核心数，设置为 auto 时将会尝试自动检测   &lt;/p&gt;
&lt;p&gt;worker_rlimit_nofile 定义了一个 worker 进程的最大打开文件数，理论上这个值是最多打开文件数（ulimit -n）与 nginx 工作进程相除，默认为操作系统的限制，过低可能会出现 too many open files 问题   &lt;/p&gt;
&lt;h3 id=&quot;Events-模块&quot;&gt;&lt;a href=&quot;#Events-模块&quot; class=&quot;headerlink&quot; title=&quot;Events 模块&quot;&gt;&lt;/a&gt;Events 模块&lt;/h3&gt;&lt;p&gt;events 模块包含 nginx 中所有处理连接的设置  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;events &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    worker_connections 2048;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    multi_accept on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    use epoll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;worker_connections 设置一个 worker 进程同时打开的最大连接数，最大连接数受系统可用的 socket 连接数限制（64k）  &lt;/p&gt;
&lt;p&gt;multi_accept 设置是否允许，Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接  &lt;/p&gt;
&lt;p&gt;use 设置用于复用客户端线程的轮询方法  &lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-隐藏版本号</title>
    <link href="http://www.zhaojiaxing.top/2018/06/20/Nginx-%E9%9A%90%E8%97%8F%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    <id>http://www.zhaojiaxing.top/2018/06/20/Nginx-隐藏版本号/</id>
    <published>2018-06-20T00:30:38.000Z</published>
    <updated>2018-06-20T02:51:28.034Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;进入 nginx 配置文件的目录（此目录根据安装时决定），用 vim 编辑打开&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# vim nginx.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 http {···}里加上 server_tokens off; 如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ···&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendfile on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tcp_nopush on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keepalive_timeout 60;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tcp_nodelay on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server_tokens off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ···&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-rewrite</title>
    <link href="http://www.zhaojiaxing.top/2018/06/19/Nginx-rewrite/"/>
    <id>http://www.zhaojiaxing.top/2018/06/19/Nginx-rewrite/</id>
    <published>2018-06-19T01:03:20.000Z</published>
    <updated>2018-06-19T02:14:48.693Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;nginx 的重写模块是一个简单的正则表达式匹配与一个虚拟堆叠机结合。依赖于 PCRE 库，因此需要安装 pcre。根据相关变量重定向和选择不同的配置，从一个 location 跳转到另一个 location，不过这样的循环最多可以执行 10 次，超过后 nginx 将返回 500 错误。同时，重写模块包含 set 指令，来创建新的变量并设其值，这在有些情景下非常有用的，如记录条件标识、传递参数到其他 location、记录做了什么等等  &lt;/p&gt;
&lt;h3 id=&quot;指令&quot;&gt;&lt;a href=&quot;#指令&quot; class=&quot;headerlink&quot; title=&quot;指令&quot;&gt;&lt;/a&gt;指令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;语法： break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;默认值： none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用字段： server, location, if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;完成当前设置的重写规则，停止执行其他的重写规则。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;语法： if (condition) &amp;#123; … &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;默认值： none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用字段： server, location&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注意：尽量考虑使用 trp_files 代替。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;判断的条件可以有以下值：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1. 一个变量的名称：空字符传 ”“ 或者一些 “0” 开始的字符串为 false。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. 字符串比较：使用 = 或 != 运算符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. 正则表达式匹配：使用 ~ (区分大小写)和 ~* (不区分大小写)，取反运算 !~ 和 !~*。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4. 文件是否存在：使用 -f 和 !-f 操作符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5. 目录是否存在：使用 -d 和 !-d 操作符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7. 文件、目录、符号链接是否存在：使用 -e 和 !-e 操作符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8. 文件是否可执行：使用 -x 和 !-x 操作符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-日志切割</title>
    <link href="http://www.zhaojiaxing.top/2018/06/15/Nginx-%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
    <id>http://www.zhaojiaxing.top/2018/06/15/Nginx-日志切割/</id>
    <published>2018-06-15T00:42:55.000Z</published>
    <updated>2018-06-15T01:48:53.530Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Logrotate 是 Linux 下一款日志管理工具，可用于日志文件的转储（即删除旧日志文件，创建新日志文件）。可以根据日志大小或者按照某时段间隔来转储，内部使用 cron 程序来执行。Logrotate 还可以在压缩日志，并发送到指定 E-mail  &lt;/p&gt;
&lt;h3 id=&quot;配置参数&quot;&gt;&lt;a href=&quot;#配置参数&quot; class=&quot;headerlink&quot; title=&quot;配置参数&quot;&gt;&lt;/a&gt;配置参数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;compress                        通过 gzip 压缩转储以后的日志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nocompress                      不压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copytruncate                    用于还在打开中的日志文件，把当前日志备份并截断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nocopytruncate                  备份日志文件但是不截断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create mode owner group         转储文件，使用指定的文件模式创建新的日志文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nocreate                        不建立新的日志文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delaycompress 和 compress        一起使用时，转储的日志文件到下一次转储时才压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nodelaycompress                 覆盖 delaycompress 选项，转储同时压缩。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;errors address                  转储时的错误信息发送到指定的 Email 地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ifempty                         即使是空文件也转储，这个是 logrotate 的缺省选项。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notifempty                      如果是空文件的话，不转储&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mail address                    把转储的日志文件发送到指定的 E-mail 地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nomail                          转储时不发送日志文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;olddir directory                转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;noolddir                        转储后的日志文件和当前日志文件放在同一个目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prerotate/endscript             在转储以前需要执行的命令可以放入这个对，这两个关键字必须单独成行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;postrotate/endscript            在转储以后需要执行的命令可以放入这个对，这两个关键字必须单独成行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;daily                           指定转储周期为每天&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;weekly                          指定转储周期为每周&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;monthly                         指定转储周期为每月&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rotate count                    指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tabootext [+] list 让logrotate   不转储指定扩展名的文件，缺省的扩展名是：.rpm-orig, .rpmsave, v, 和 ~ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;size size                       当日志文件到达指定的大小时才转储，bytes(缺省)及KB(sizek)或MB(sizem)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nginx-日志配置</title>
    <link href="http://www.zhaojiaxing.top/2018/06/14/Nginx-%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.zhaojiaxing.top/2018/06/14/Nginx-日志配置/</id>
    <published>2018-06-14T00:29:31.000Z</published>
    <updated>2018-06-14T02:12:55.328Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;access-log-指令&quot;&gt;&lt;a href=&quot;#access-log-指令&quot; class=&quot;headerlink&quot; title=&quot;access_log 指令&quot;&gt;&lt;/a&gt;access_log 指令&lt;/h3&gt;&lt;p&gt;设置访问日志&lt;/p&gt;
&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;access_log path [format [buffer=size [flush=time]][if=condition]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_log path format gzip[=level][buffer=size][flush=time][if=condition];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_log syslog:server=address[,parameter=value][format];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_log off; # 关闭日志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;buffer=size #存放访问日志的缓冲区大小 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flush=time #缓冲区日志刷到磁盘的时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if=condition #其他条件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gzip[=level] #压缩级别&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-ngx_http_core_module模块提供的变量</title>
    <link href="http://www.zhaojiaxing.top/2018/06/12/Nginx-ngx-http-core-module%E6%A8%A1%E5%9D%97%E6%8F%90%E4%BE%9B%E7%9A%84%E5%8F%98%E9%87%8F/"/>
    <id>http://www.zhaojiaxing.top/2018/06/12/Nginx-ngx-http-core-module模块提供的变量/</id>
    <published>2018-06-12T00:57:06.000Z</published>
    <updated>2018-06-13T00:54:04.606Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;$arg_PARAMETER&lt;/code&gt;：&lt;code&gt;HTTP&lt;/code&gt; 请求中某个参数的值，如 &lt;code&gt;/index.php?site=www.ttlsa.com&lt;/code&gt;，可以使用 &lt;code&gt;$arg_site&lt;/code&gt; 获取 &lt;code&gt;www.ttlsa.com&lt;/code&gt; 这个值  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$args&lt;/code&gt;：&lt;code&gt;HTTP&lt;/code&gt; 请求中的完整参数，如 &lt;code&gt;/index.php?width=500&amp;amp;height=200&lt;/code&gt;，&lt;code&gt;$args&lt;/code&gt; 表示字符串 &lt;code&gt;width=500&amp;amp;height=200&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$binary_remote_addr&lt;/code&gt;：二进制格式的客户端地址  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$body_bytes_sent&lt;/code&gt;：表示在向客户端发送的 &lt;code&gt;http&lt;/code&gt; 响应中，包体部分的字节数  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$content_length&lt;/code&gt;：表示客户端请求头部中的 &lt;code&gt;Content-Length&lt;/code&gt; 字段  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$content_type&lt;/code&gt;：表示客户端请求头部中的 &lt;code&gt;Content-Type&lt;/code&gt; 字段  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$cookie_COOKIE&lt;/code&gt;： 表示在客户端请求头部中的 &lt;code&gt;cookie&lt;/code&gt; 字段  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$document_root&lt;/code&gt;：表示当前请求所使用的 &lt;code&gt;root&lt;/code&gt; 配置项的值   &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$uri&lt;/code&gt;：表示当前请求的 &lt;code&gt;URI&lt;/code&gt;，不带任何参数  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$document_uri&lt;/code&gt;：与 &lt;code&gt;$uri&lt;/code&gt; 含义相同   &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$request_uri&lt;/code&gt;：表示客户端发来的原始请求 &lt;code&gt;URI&lt;/code&gt;，带完整的参数。&lt;code&gt;$uri&lt;/code&gt; 和 &lt;code&gt;$document_uri&lt;/code&gt; 未必是用户的原始请求，在内部重定向后可能是重定向后的 &lt;code&gt;URI&lt;/code&gt;，而 &lt;code&gt;$request_uri&lt;/code&gt; 永远不会改变  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$host&lt;/code&gt;：表示客户端请求头部中的 &lt;code&gt;Host&lt;/code&gt; 字段。如果 &lt;code&gt;Host&lt;/code&gt; 字段不存在，则以实际处理的 &lt;code&gt;server&lt;/code&gt;（虚拟主机）名称代替。如果 &lt;code&gt;Host&lt;/code&gt; 字段中带有端口，如 &lt;code&gt;IP:PORT&lt;/code&gt; ，那么 &lt;code&gt;$host&lt;/code&gt; 是去掉端口的，它的值为 &lt;code&gt;IP&lt;/code&gt;。&lt;code&gt;$host&lt;/code&gt; 是全小写的。这些特性与 &lt;code&gt;http_HEADER&lt;/code&gt; 中的 &lt;code&gt;http_post&lt;/code&gt;  不同， &lt;code&gt;http_host&lt;/code&gt; 只取出 &lt;code&gt;Host&lt;/code&gt; 头部对应的值   &lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-root和alias</title>
    <link href="http://www.zhaojiaxing.top/2018/06/12/Nginx-root%E5%92%8Calias/"/>
    <id>http://www.zhaojiaxing.top/2018/06/12/Nginx-root和alias/</id>
    <published>2018-06-12T00:35:38.000Z</published>
    <updated>2018-06-12T00:51:30.625Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;&lt;code&gt;nginx&lt;/code&gt; 指定文件路径有两种方式 &lt;code&gt;root&lt;/code&gt; 和 &lt;code&gt;alias&lt;/code&gt;，&lt;code&gt;root&lt;/code&gt; 与 &lt;code&gt;alias&lt;/code&gt; 主要区别在于 &lt;code&gt;nginx&lt;/code&gt; 如何解释 &lt;code&gt;location&lt;/code&gt; 后面的 &lt;code&gt;uri&lt;/code&gt;，这会使两者分别以不同的方式将请求映射到服务器文件上&lt;/p&gt;
&lt;h3 id=&quot;root&quot;&gt;&lt;a href=&quot;#root&quot; class=&quot;headerlink&quot; title=&quot;root&quot;&gt;&lt;/a&gt;root&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;语法： &lt;code&gt;root path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;默认值： &lt;code&gt;root html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置段： &lt;code&gt;http&lt;/code&gt;、 &lt;code&gt;server&lt;/code&gt;、 &lt;code&gt;location&lt;/code&gt;、 &lt;code&gt;if&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location ~ ^/weblogs/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /data/weblogs/www.ttlsa.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    autoindex on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    auth_basic &amp;quot;Restricted&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    auth_basic_user_file passwd/weblogs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果一个请求的 &lt;code&gt;URI&lt;/code&gt; 是 &lt;code&gt;/weblogs/httplogs/www.ttlsa.com-access.log&lt;/code&gt; 时， &lt;code&gt;web 服务器&lt;/code&gt;将会返回服务器上的&lt;br&gt;&lt;code&gt;/data/weblogs/www.ttlsa.com/weblogs/httplogs/www.ttlsa.com-access.log&lt;/code&gt; 的文件。&lt;br&gt;&lt;strong&gt;root 会根据完整的 URI 请求来映射，也就是 /path/uri&lt;/strong&gt;，因此，前面的请求映射为 &lt;code&gt;path/weblogs/httplogs/www.ttlsa.com-access.log&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx-location配置</title>
    <link href="http://www.zhaojiaxing.top/2018/06/11/Nginx-location%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.zhaojiaxing.top/2018/06/11/Nginx-location配置/</id>
    <published>2018-06-11T02:06:51.000Z</published>
    <updated>2018-06-11T03:51:08.277Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;语法规则&quot;&gt;&lt;a href=&quot;#语法规则&quot; class=&quot;headerlink&quot; title=&quot;语法规则&quot;&gt;&lt;/a&gt;语法规则&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location [=|~|~*|^~] /uri/ &amp;#123; … &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;解析&quot;&gt;&lt;a href=&quot;#解析&quot; class=&quot;headerlink&quot; title=&quot;解析&quot;&gt;&lt;/a&gt;解析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt; 表示精确匹配,这个优先级也是最高的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^~&lt;/code&gt; 表示 &lt;code&gt;uri&lt;/code&gt; 以某个常规字符串开头，理解为匹配 &lt;code&gt;url&lt;/code&gt; 路径即可。&lt;code&gt;nginx&lt;/code&gt; 不对 &lt;code&gt;url&lt;/code&gt; 做编码，因此请求为 &lt;code&gt;/static/20%/aa&lt;/code&gt;，可以被规则&lt;code&gt;^~ /static/ /aa&lt;/code&gt; 匹配到（注意是空格）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt; 表示区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~*&lt;/code&gt; 表示不区分大小写的正则匹配(和上面的唯一区别就是大小写)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!~&lt;/code&gt;和&lt;code&gt;!~*&lt;/code&gt;分别为区分大小写不匹配及不区分大小写不匹配的正则&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt; 通用匹配，任何请求都会匹配到，默认匹配&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.zhaojiaxing.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux-find命令</title>
    <link href="http://www.zhaojiaxing.top/2018/06/06/Linux-find%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.zhaojiaxing.top/2018/06/06/Linux-find命令/</id>
    <published>2018-06-06T05:25:43.000Z</published>
    <updated>2018-06-06T06:09:39.996Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h3&gt;&lt;p&gt;在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。&lt;/p&gt;
&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find(选项)(参数)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
      <category term="命令" scheme="http://www.zhaojiaxing.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux-函数</title>
    <link href="http://www.zhaojiaxing.top/2018/05/30/Linux-%E5%87%BD%E6%95%B0/"/>
    <id>http://www.zhaojiaxing.top/2018/05/30/Linux-函数/</id>
    <published>2018-05-30T00:38:24.000Z</published>
    <updated>2018-05-30T08:36:31.688Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基本脚本函数&quot;&gt;&lt;a href=&quot;#基本脚本函数&quot; class=&quot;headerlink&quot; title=&quot;基本脚本函数&quot;&gt;&lt;/a&gt;基本脚本函数&lt;/h3&gt;&lt;h4 id=&quot;创建函数&quot;&gt;&lt;a href=&quot;#创建函数&quot; class=&quot;headerlink&quot; title=&quot;创建函数&quot;&gt;&lt;/a&gt;创建函数&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function name &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用函数&quot;&gt;&lt;a href=&quot;#使用函数&quot; class=&quot;headerlink&quot; title=&quot;使用函数&quot;&gt;&lt;/a&gt;使用函数&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function func1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;This is an example of a function&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while [ $count -le 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count=$[ $count + 1 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;This is the end of the loop&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Now this is the end of the script&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数名 &lt;code&gt;func1&lt;/code&gt; 每次被引用时，&lt;code&gt;bash shell&lt;/code&gt; 返回 &lt;code&gt;func1&lt;/code&gt; 函数的定义并执行该函数定义的全部命令，函数使用须在函数定义之后&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-crontab命令</title>
    <link href="http://www.zhaojiaxing.top/2018/05/29/Linux-crontab%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.zhaojiaxing.top/2018/05/29/Linux-crontab命令/</id>
    <published>2018-05-29T06:15:24.000Z</published>
    <updated>2018-05-30T08:45:12.182Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h3&gt;&lt;p&gt;&lt;code&gt;crontab&lt;/code&gt; 命令被用来提交和管理用户的需要周期性执行的任务&lt;/p&gt;
&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;crontab(选项)(参数)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;选项&quot;&gt;&lt;a href=&quot;#选项&quot; class=&quot;headerlink&quot; title=&quot;选项&quot;&gt;&lt;/a&gt;选项&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-e：编辑该用户的计时器设置；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-l：列出该用户的计时器设置；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-r：删除该用户的计时器设置；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-u&amp;lt;用户名称&amp;gt;：指定要设定计时器的用户名称。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;crontab&lt;/code&gt;文件：指定包含待执行任务的&lt;code&gt;crontab&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
      <category term="命令" scheme="http://www.zhaojiaxing.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux-脚本控制</title>
    <link href="http://www.zhaojiaxing.top/2018/05/29/Linux-%E8%84%9A%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    <id>http://www.zhaojiaxing.top/2018/05/29/Linux-脚本控制/</id>
    <published>2018-05-29T00:43:48.000Z</published>
    <updated>2018-05-30T08:29:36.655Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;处理信号&quot;&gt;&lt;a href=&quot;#处理信号&quot; class=&quot;headerlink&quot; title=&quot;处理信号&quot;&gt;&lt;/a&gt;处理信号&lt;/h3&gt;&lt;h4 id=&quot;Linux-信号回顾&quot;&gt;&lt;a href=&quot;#Linux-信号回顾&quot; class=&quot;headerlink&quot; title=&quot;Linux 信号回顾&quot;&gt;&lt;/a&gt;Linux 信号回顾&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;信号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;挂起进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;中断进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;无条件终止进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;15&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;如果可能的话终止进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;17&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;无条件停止，但不终止进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;18&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;停止或暂停进程，但不终止它&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;19&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重新启动停止的进程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;默认情况下，&lt;code&gt;bash shell&lt;/code&gt; 会忽略它接收的任何 &lt;code&gt;SIGQUIT&lt;/code&gt; 和 &lt;code&gt;SIGTERM&lt;/code&gt; 信号，以防止交互的 &lt;code&gt;shell&lt;/code&gt; 意外终止   &lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-显示数据</title>
    <link href="http://www.zhaojiaxing.top/2018/05/28/Linux-%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE/"/>
    <id>http://www.zhaojiaxing.top/2018/05/28/Linux-显示数据/</id>
    <published>2018-05-28T05:08:33.000Z</published>
    <updated>2018-05-30T08:10:23.338Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;了解输入和输出&quot;&gt;&lt;a href=&quot;#了解输入和输出&quot; class=&quot;headerlink&quot; title=&quot;了解输入和输出&quot;&gt;&lt;/a&gt;了解输入和输出&lt;/h3&gt;&lt;h4 id=&quot;标准文件描述符&quot;&gt;&lt;a href=&quot;#标准文件描述符&quot; class=&quot;headerlink&quot; title=&quot;标准文件描述符&quot;&gt;&lt;/a&gt;标准文件描述符&lt;/h4&gt;&lt;p&gt;文件描述符是一个非负整数，可以唯一标识会话中打开的文件。每个进程中最多可以有 &lt;code&gt;9&lt;/code&gt; 个打开文件的描述符。&lt;code&gt;bash shell&lt;/code&gt; 为特殊需要保留前 &lt;code&gt;3&lt;/code&gt; 个文件描述符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;文件描述符&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;缩写&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;STDIN&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;标准输入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;标准输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;标准错误&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&quot;STDIN&quot;&gt;&lt;a href=&quot;#STDIN&quot; class=&quot;headerlink&quot; title=&quot;STDIN&quot;&gt;&lt;/a&gt;STDIN&lt;/h5&gt;&lt;p&gt;&lt;code&gt;shell&lt;/code&gt; 通过 &lt;code&gt;STDIN&lt;/code&gt; 文件描述符从键盘接受输入，并在键入时处理每个字符  &lt;/p&gt;
&lt;p&gt;使用重定向符号（&lt;code&gt;&amp;lt;&lt;/code&gt;）时，&lt;code&gt;Linux&lt;/code&gt; 将使用重定向引用的文件替换标准的输入文件描述符&lt;/p&gt;
&lt;h5 id=&quot;STDOUT&quot;&gt;&lt;a href=&quot;#STDOUT&quot; class=&quot;headerlink&quot; title=&quot;STDOUT&quot;&gt;&lt;/a&gt;STDOUT&lt;/h5&gt;&lt;p&gt;&lt;code&gt;shell&lt;/code&gt; 的所有输出（包括 &lt;code&gt;shell&lt;/code&gt; 中运行的程序和脚本）都定向到标准输出，也就是监视器  &lt;/p&gt;
&lt;p&gt;使用重定向符号（&lt;code&gt;&amp;gt;&lt;/code&gt;）时，所有通常定向到监视器的输出都会重定向到 &lt;code&gt;shell&lt;/code&gt; 指定的文件   &lt;/p&gt;
&lt;h5 id=&quot;STDERR&quot;&gt;&lt;a href=&quot;#STDERR&quot; class=&quot;headerlink&quot; title=&quot;STDERR&quot;&gt;&lt;/a&gt;STDERR&lt;/h5&gt;&lt;p&gt;&lt;code&gt;STDERR&lt;/code&gt; 处理错误信息，是 &lt;code&gt;shell&lt;/code&gt; 发送错误消息的目的地   &lt;/p&gt;
&lt;p&gt;默认情况下，&lt;code&gt;STDERR&lt;/code&gt; 与 &lt;code&gt;STDOUT&lt;/code&gt; 指向相同的位置，也就是默认情况下，所有错误消息都显示在监视器上，但重定向 &lt;code&gt;STDOUT&lt;/code&gt; 不会自动重定向 &lt;code&gt;STDERR&lt;/code&gt;，错误消息仍会显示在监视器上  &lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-处理用户输入</title>
    <link href="http://www.zhaojiaxing.top/2018/05/23/Linux-%E5%A4%84%E7%90%86%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/"/>
    <id>http://www.zhaojiaxing.top/2018/05/23/Linux-处理用户输入/</id>
    <published>2018-05-23T07:01:16.000Z</published>
    <updated>2018-05-30T07:46:43.172Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;命令行参数&quot;&gt;&lt;a href=&quot;#命令行参数&quot; class=&quot;headerlink&quot; title=&quot;命令行参数&quot;&gt;&lt;/a&gt;命令行参数&lt;/h3&gt;&lt;h4 id=&quot;读取参数&quot;&gt;&lt;a href=&quot;#读取参数&quot; class=&quot;headerlink&quot; title=&quot;读取参数&quot;&gt;&lt;/a&gt;读取参数&lt;/h4&gt;&lt;p&gt;&lt;code&gt;bash shell&lt;/code&gt; 将在命令行输入的所有参数赋值给一些特殊变量，这些变量称为位置参数。位置参数通过标准数字表示，其中 &lt;code&gt;$0&lt;/code&gt; 为程序名称，&lt;code&gt;$1&lt;/code&gt; 为第一个参数，&lt;code&gt;$2&lt;/code&gt; 为第二个参数，依次类推，直到 &lt;code&gt;$9&lt;/code&gt; 为第九个参数。如果脚本需要的命令行参数多于 &lt;code&gt;9&lt;/code&gt; 个，那么之后的变量须使用大括号括起来，如 &lt;code&gt;${10}&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;参数在命令行中使用空格分隔，如果参数中包含空格，必须使用引号 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo Hello $1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ test Rich&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello Rich&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ test &amp;apos;Rich Mall&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hell Rich Mall&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-循环语句</title>
    <link href="http://www.zhaojiaxing.top/2018/05/23/Linux-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    <id>http://www.zhaojiaxing.top/2018/05/23/Linux-循环语句/</id>
    <published>2018-05-23T00:52:30.000Z</published>
    <updated>2018-05-30T07:45:57.684Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;for-命令&quot;&gt;&lt;a href=&quot;#for-命令&quot; class=&quot;headerlink&quot; title=&quot;for 命令&quot;&gt;&lt;/a&gt;for 命令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for var in list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;读取列表的值&quot;&gt;&lt;a href=&quot;#读取列表的值&quot; class=&quot;headerlink&quot; title=&quot;读取列表的值&quot;&gt;&lt;/a&gt;读取列表的值&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for test in Alabama Alaska Arizona Arkansas&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo $test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后一次迭代之后，变量 &lt;code&gt;$test&lt;/code&gt; 在 &lt;code&gt;shell&lt;/code&gt; 脚本的其他部分中仍有效，仍是迭代的最后一个值   &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for test in I don\&amp;apos;t know if &amp;quot;this&amp;apos;s&amp;quot; work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo $test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;shell&lt;/code&gt; 看到列表中的单引号，会试图用它们来定义一个单独的数据值，所有可以使用转义字符或者使用双引号来解决该问题  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for test in &amp;quot;New York&amp;quot; Nevada&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo $test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; 命令用空格分隔列表中的每个值，如果数值中间有空格则必须使用双引号将它们包起来   &lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-条件语句</title>
    <link href="http://www.zhaojiaxing.top/2018/05/22/Linux-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    <id>http://www.zhaojiaxing.top/2018/05/22/Linux-条件语句/</id>
    <published>2018-05-22T05:26:39.000Z</published>
    <updated>2018-05-30T07:31:37.302Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;if-then&quot;&gt;&lt;a href=&quot;#if-then&quot; class=&quot;headerlink&quot; title=&quot;if-then&quot;&gt;&lt;/a&gt;if-then&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if command&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if command; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt; 语句运行在 &lt;code&gt;if&lt;/code&gt; 行定义的命令，如果命令的退出状态是 &lt;code&gt;0&lt;/code&gt;，将执行 &lt;code&gt;then&lt;/code&gt; 后面的所有命令。如果命令的退出状态是 &lt;code&gt;0&lt;/code&gt; 以外的其他值，那么 &lt;code&gt;then&lt;/code&gt; 后面的命令不执行  &lt;/p&gt;
&lt;h3 id=&quot;if-then-else&quot;&gt;&lt;a href=&quot;#if-then-else&quot; class=&quot;headerlink&quot; title=&quot;if-then-else&quot;&gt;&lt;/a&gt;if-then-else&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if command&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt; 语句运行在 &lt;code&gt;if&lt;/code&gt; 行定义的命令，如果命令的退出状态是 &lt;code&gt;0&lt;/code&gt;，将执行 &lt;code&gt;then&lt;/code&gt; 后面的所有命令。如果命令的退出状态是 &lt;code&gt;0&lt;/code&gt; 以外的其他值，将执行 &lt;code&gt;else&lt;/code&gt; 后面的所有命令   &lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.zhaojiaxing.top/tags/Linux/"/>
    
  </entry>
  
</feed>
